{"ast":null,"code":"var _jsxFileName = \"/Users/alexalexdidit/Documents/Code/welbex-blog/frontend/src/Feed.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Post from './Post';\nimport { Pagination } from 'react-bootstrap';\nimport UpdateField from './Field';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Feed() {\n  _s();\n  const [currentPage, setCurrentPage] = useState(1);\n  const postsPerPage = 20;\n  const posts = [{\n    user: \"user1\",\n    content: \"2222\"\n  }];\n  useEffect(async () => {\n    const response = await fetch(`http://127.0.0.1:3010/api/allposts`);\n  });\n  // Get current posts\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\n\n  // Change page\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  // Build pagination items\n  const pageItems = [];\n  for (let i = 1; i <= Math.ceil(posts.length / postsPerPage); i++) {\n    pageItems.push( /*#__PURE__*/_jsxDEV(Pagination.Item, {\n      active: i === currentPage,\n      onClick: () => paginate(i),\n      children: i\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '0 auto',\n        width: '50%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(UpdateField, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), currentPosts.map((post, index) => /*#__PURE__*/_jsxDEV(Post, {\n        user: post.user,\n        content: post.content\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)), /*#__PURE__*/_jsxDEV(Pagination, {\n        children: pageItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(Feed, \"GDYsIxij9y/ZFL42bMqqthZmeP4=\");\n_c = Feed;\nexport default Feed;\nvar _c;\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"names":["React","useState","Post","Pagination","UpdateField","jsxDEV","_jsxDEV","Feed","_s","currentPage","setCurrentPage","postsPerPage","posts","user","content","useEffect","response","fetch","indexOfLastPost","indexOfFirstPost","currentPosts","slice","paginate","pageNumber","pageItems","i","Math","ceil","length","push","Item","active","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","style","margin","width","map","post","index","_c","$RefreshReg$"],"sources":["/Users/alexalexdidit/Documents/Code/welbex-blog/frontend/src/Feed.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Post from './Post';\nimport { Pagination } from 'react-bootstrap';\nimport UpdateField from './Field';\n\nfunction Feed() {\n  const [currentPage, setCurrentPage] = useState(1);\n  const postsPerPage = 20;\n  const posts = [{user: \"user1\", content:\"2222\"}];\n  useEffect( async () => {\n    const response = await fetch(`http://127.0.0.1:3010/api/allposts`);\n  });\n  // Get current posts\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\n\n  // Change page\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n  // Build pagination items\n  const pageItems = [];\n  for (let i = 1; i <= Math.ceil(posts.length / postsPerPage); i++) {\n    pageItems.push(\n      <Pagination.Item key={i} active={i === currentPage} onClick={() => paginate(i)}>\n        {i}\n      </Pagination.Item>\n    );\n  }\n  return (\n    <div>\n        <div style={{ margin: '0 auto', width: '50%' }}>\n            <UpdateField/>\n            {currentPosts.map((post, index) => (\n                <Post key={index} user={post.user} content={post.content} />\n            ))}\n        <Pagination>{pageItems}</Pagination>\n        </div>\n    </div>\n  );\n}\n\nexport default Feed;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,QAAQ;AACzB,SAASC,UAAU,QAAQ,iBAAiB;AAC5C,OAAOC,WAAW,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAMU,YAAY,GAAG,EAAE;EACvB,MAAMC,KAAK,GAAG,CAAC;IAACC,IAAI,EAAE,OAAO;IAAEC,OAAO,EAAC;EAAM,CAAC,CAAC;EAC/CC,SAAS,CAAE,YAAY;IACrB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,oCAAmC,CAAC;EACpE,CAAC,CAAC;EACF;EACA,MAAMC,eAAe,GAAGT,WAAW,GAAGE,YAAY;EAClD,MAAMQ,gBAAgB,GAAGD,eAAe,GAAGP,YAAY;EACvD,MAAMS,YAAY,GAAGR,KAAK,CAACS,KAAK,CAACF,gBAAgB,EAAED,eAAe,CAAC;;EAEnE;EACA,MAAMI,QAAQ,GAAIC,UAAU,IAAKb,cAAc,CAACa,UAAU,CAAC;;EAE3D;EACA,MAAMC,SAAS,GAAG,EAAE;EACpB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIC,IAAI,CAACC,IAAI,CAACf,KAAK,CAACgB,MAAM,GAAGjB,YAAY,CAAC,EAAEc,CAAC,EAAE,EAAE;IAChED,SAAS,CAACK,IAAI,eACZvB,OAAA,CAACH,UAAU,CAAC2B,IAAI;MAASC,MAAM,EAAEN,CAAC,KAAKhB,WAAY;MAACuB,OAAO,EAAEA,CAAA,KAAMV,QAAQ,CAACG,CAAC,CAAE;MAAAQ,QAAA,EAC5ER;IAAC,GADkBA,CAAC;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEN,CACnB,CAAC;EACH;EACA,oBACE/B,OAAA;IAAA2B,QAAA,eACI3B,OAAA;MAAKgC,KAAK,EAAE;QAAEC,MAAM,EAAE,QAAQ;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAP,QAAA,gBAC3C3B,OAAA,CAACF,WAAW;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,EACbjB,YAAY,CAACqB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC1BrC,OAAA,CAACJ,IAAI;QAAaW,IAAI,EAAE6B,IAAI,CAAC7B,IAAK;QAACC,OAAO,EAAE4B,IAAI,CAAC5B;MAAQ,GAA9C6B,KAAK;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA2C,CAC9D,CAAC,eACN/B,OAAA,CAACH,UAAU;QAAA8B,QAAA,EAAET;MAAS;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAAC7B,EAAA,CAnCQD,IAAI;AAAAqC,EAAA,GAAJrC,IAAI;AAqCb,eAAeA,IAAI;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}